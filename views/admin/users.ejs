<style type="text/css">

    #users-page > div > .table > tbody > tr > td, 
    #users-page > div > .table > tbody > tr > th,
    #users-page > div > .table > tfoot > tr > td, 
    #users-page > div > .table > tfoot > tr > th, 
    #users-page > div > .table > thead > tr > td, 
    #users-page > div > .table > thead > tr > th {
        vertical-align: baseline;
        padding: 8px;
    }

    #users-page > div > .table > tbody > tr > td > p {
        padding-bottom: 0px;
    }

    #users-page > div > .table > tbody > tr > td > label {
        padding-top: 8px;
    }

    #users-page > div > .table {
        margin-left: auto; 
        margin-right: auto; width: 100%;
    }

    #users-page > .panel {
        border: 0;
    }

    #users-page > .panel > .panel-heading {
        display: flex;
        -webkit-flex-flow: row wrap;
        justify-content: flex-end;

        border-bottom: 0;
    }

    #users-page > .panel > .panel-body {
        padding: 0;
    }

    #users-page > .panel > .panel-heading > .filter {
        width: 25%;
    }

    #users-page > .panel > .panel-heading > .filter > input{
        height: 30px;
    }

    #users-page > .panel > .panel-heading > .btn-group {
        margin-left: 8px;
    }
</style>

<!-- Switch button -->
<style type="text/css">
    /* The switch - the box around the slider */
    .switch {
        vertical-align: bottom;
        margin-bottom: 0px;
        position: relative;
        display: inline-block;
        width: 60px;
        height: 24px;
    }

    /* Hide default HTML checkbox */
    .switch input {display:none;}

    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 16px;
        width: 16px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(35px);
    }

    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }

    .slider.round:before {
      border-radius: 50%;
    }
</style>

<div id="content_body">
    <div class="page-header">
        <h2>
            Users
        </h2>
    </div>
    <div id="users-page">
        <div class="panel panel-default datatable" id="auth_admins" data-pagination-url="/filters/users" data-application_id="idm_admin_app" data-pagination-pages="">
            <div class="panel-heading">
                <div class="filter table_search client">
                    <input class="form-control" value="" type="text" name="list_users__filter__q" placeholder="Filter">
                </div>
                <div class="btn-group"> 
                    <button title="Create user" data-toggle="modal" data-target="#create_user_modal" class="btn btn-default btn-sm ajax-modal">
                        Create user
                    </button>
                </div>
                <div class="btn-group"> 
                    <button title="Delete user" data-toggle="modal" data-target="#delete_user_modal" class="btn btn-default btn-sm ajax-modal">
                        Delete user
                    </button>
                </div>
            </div>
            <div class="panel-body datatable-content">
                <div style="overflow-x:auto;">
                    <table id="user_table" class="table table-striped">
                        <thead>
                            <tr>
                                <th width="5%">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="check_all">
                                    </div> 
                                </th>
                                <th width="5%"></th>
                                <th width="20%">Id</th>
                                <th width="10%">Username</th>
                                <th width="10%">Email</th>
                                <th width="5%">Enable</th>
                                <th width="10%">Actions</th>
                            </tr>
                        </thead>
                        <tbody> 
                            
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="panel-footer">
                <nav id="users_pagination_container"></nav>
            </div>
        </div>
    </div>
</div>

<%- include _delete_user %>
<%- include _reset_password %>
<%- include _edit_user %>
<%- include _create_user %>

<%- include ../templates/./admin/./_user_row %>

<script type="text/javascript">

// Handle the authorization of users to be administrators
$(document).ready(function() {

    $('#users-page').on("changed.bs.select", ".selectpicker", function(e, clickedIndex, newValue, oldValue) {
        var selectedD = $(this).find('option').eq(clickedIndex).val();

        if (selectedD === 'password') {
            $('#change_password_modal').modal('show');
        } else if (selectedD === 'edit') {
            $('#edit_user_modal').modal('show');
        }

        $('.selectpicker').selectpicker('val', '');
        
    })

    $('#check_all').click(function() {
        if ($(this).prop('checked')) { 
            $('.form-check-input').prop('checked', true);
        } else {
            $('.form-check-input').prop('checked', false);
        }
    })


    $('#users-page').on("click", "span.enable_user", function(e) {

        e.preventDefault();

        var user_id = $(this).closest('tr').attr('id')
        var user_current_enablement = $(this).siblings("input[type='checkbox']").is(":checked")

        var data = {
            enabled: !user_current_enablement
        }

        // Send put request
        var put_request = $.ajax({
            url: '/idm/admins/list_users/users/' + user_id + '/enable',
            type: 'PUT',
            beforeSend: beforeSend($("#create_user_form").find('input:hidden[name=_csrf]').val()),
            data: data
        })

        put_request.done(function() {
            $('#'+user_id).find("input[type='checkbox']").prop('checked', !user_current_enablement)
            for (i = 0; i < users.length; i++) {
                if (users[i].id === user_id) {
                    users[i].enabled = !user_current_enablement
                }
            }
        })

        put_request.fail(function(response) {
            console.log(response)  
        })
    })


    // Handle the submit button from the create role form
    $("#create_user_form").submit(function(event) {

        // stop form from submitting normally
        event.preventDefault();
        
        // Hide alerts
        $('span.alert').hide('close')

        // Payload to be send to the server
        var data = {
            username:  $(this).find('input#id_username').val(),
            email:  $(this).find('input#id_email').val(),
            password1:  $(this).find('input#id_password1').val(),
            password2:  $(this).find('input#id_password2').val(),
            description:  $(this).find('textarea#id_description').val(),
            website:  $(this).find('input#id_website').val(),
            send_email:  $(this).find('input#id_send_email').is(":checked"),
            enabled: $(this).find('input#id_enabled').is(":checked") 
        }

        // Check values of inputs before send to the server
        if (data.username == '') {
            $('span.alert#username').show('open')
        }
        if (data.email == '') {
            $('span.alert#email').show('open')
        }
        if (data.password1 == '') {
            $('span.alert#password1').show('open')
        }
        if (data.password2 == '') {
            $('span.alert#password2').show('open')
        }
        if (data.password1 !== data.password2) {
            $('span.alert#passwordDifferent').show('open')
        }

        // If there is no alert send post request to the server
        if (!$('span.alert').is(":visible")) {
            // Get the action attribute from the <form action=""> element 
            var $form = $(this),
                url = $form.attr('action');
            
            // Send the data using post with element id name 
            var post_request = $.post({
                url: url, 
                data: data,
                beforeSend: beforeSend($("#create_user_form").find('input:hidden[name=_csrf]').val()) 
            });
     
            post_request.done(function(user) {
                users.push(user)
                $('#create_user_modal').modal('hide')                
            });

            post_request.fail(function(response) {
                var errors = JSON.parse(response.responseText).errors
                for (var i in errors) { 
                    $('span.alert#'+errors[i].message).show('open')
                }
            })
        }

    });

    $('#create_user_modal').on('hidden.bs.modal', function () {
        $("#create_user_form").find('input.form-control').val('')
        $("#create_user_form").find('input[type="checkbox"]').prop('checked', false)
        $('span.alert').hide('close')
    })

    load_users()

    var users = []
    var users_filter = []

    function htmlEntities(str) {
        return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
    }


    function load_users() {
        
        $.get('/idm/admins/list_users/users', function(data, status) {
            if (data.users.length > 0) {
                users = data.users
                users_pagination(data.count)
                create_user_rows(users.slice(0,15))
            } else {
                $('#admins_content').find('.alert').show('open')
            }
        })  
    }

    function create_user_rows(rows) {
        $("#user_table > tbody").html("");
        for (var i = 0; i < rows.length; i++) {
            var user_row = $('#table_row_user_row_template').html();
            user_row = user_row.replace(/user_username/g, htmlEntities(rows[i].username));
            user_row = user_row.replace(/user_id/g, String(rows[i].id));
            user_row = user_row.replace(/user_email/g, String(rows[i].email));
            user_row = user_row.replace(/user_avatar/g, String(rows[i].image));
            $('#user_table tbody').append(user_row);
            if (rows[i].enabled) {
                $('#'+rows[i].id).find('.enable').find("input[type='checkbox']").prop('checked', true)
            }
            $('.selectpicker').selectpicker('render');
        }
    }

    function users_pagination(max) {
        $('#users_pagination_container').bootpag({
            total: Math.ceil(max/15),
            page: 1,
            maxVisible: 15,
            leaps: true,
            firstLastUse: true,
            first: 'First',
            last: 'Last',
            wrapClass: 'pagination',
            activeClass: 'active',
            disabledClass: 'disabled',
            nextClass: 'next',
            prevClass: 'prev',
            lastClass: 'last',
            firstClass: 'first'
        }).on("page", function(event, num){

            var start = (num === 1) ? 0 : 15*num
            var end = start + 15

            if (users_filter.length <= 0) {
                create_user_rows(users.slice(start, end))
            } else {
                create_user_rows(users_filter.slice(start, end))
            }
        });
    }

    var typingTimer
    var doneTypingInterval = 500;

    $("#users-page").find('.form-control').bind("keyup input",function(e) {
        var filter = $(this).val();
        users_filter = []
        clearTimeout(typingTimer);
        typingTimer = setTimeout(function() {
            for (var i = 0; i < users.length; i++) {
                if (users[i].username.includes(filter)) {
                    users_filter.push(users[i])
                }
            }
            create_user_rows(users_filter.slice(0,15))
            users_pagination(users_filter.length)
        }, doneTypingInterval);
    });

})

</script>